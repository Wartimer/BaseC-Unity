using UnityEngine;

namespace RollABall.Player
{
    internal sealed class InvulnerabilityBonus : GoodBonus, IRotation, IHaveDuration
    {
        [SerializeField] private int _id = 2;
        private float _speedRotation;
        
        public int Id => _id;
        public float Duration { get; } = 10.0f;
        
        private void Awake()
        {
            _speedRotation = 10.0f;
        }
        
        protected override void Interaction()
        {
            base.Interaction();
            _player.Invulnerable = true;
            Debug.Log("INVULNERABILITY");
            _player.GetComponent<Renderer>().material =
            PlayerMatController.SwapMaterial(GetComponent<Renderer>().material);
            BonusProcessor.AddDuration(this);
            ClocksProcessor.ActivateClock(_id);
        }

        public void Rotation()
        {
            transform.Rotate(Vector3.up * (Time.deltaTime * _speedRotation), 
                                                                Space.World);
        }
    }
}